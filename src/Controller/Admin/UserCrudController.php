<?php

namespace App\Controller\Admin;

use App\Entity\User;
use App\Helpers\Utils;
use Doctrine\ORM\EntityManagerInterface;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\ChoiceField;
use EasyCorp\Bundle\EasyAdminBundle\Field\EmailField;
use EasyCorp\Bundle\EasyAdminBundle\Field\IdField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextEditorField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;
use EasyCorp\Bundle\EasyAdminBundle\Field\HiddenField;
use Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface;

class UserCrudController extends AbstractCrudController
{
    protected $encoder;

    public function __construct(UserPasswordEncoderInterface $encoder)
    {
        $this->encoder = $encoder;
    }

    public static function getEntityFqcn(): string
    {
        return User::class;
    }


    function persistEntity(EntityManagerInterface $entityManager, $entityInstance): void
    {
        $password = $this->encoder->encodePassword($entityInstance, $entityInstance->getPassword());
        $entityInstance->setPassword($password);
        parent::persistEntity($entityManager, $entityInstance); // TODO: Change the autogenerated stub
    }

    public function updateEntity(EntityManagerInterface $entityManager, $entityInstance): void
    {
        $password = $this->encoder->encodePassword($entityInstance, $entityInstance->getPassword());
        $entityInstance->setPassword($password);
        parent::updateEntity($entityManager, $entityInstance); // TODO: Change the autogenerated stub
    }


    public function configureFields(string $pageName): iterable
    {
        return [
            IdField::new('id')->hideOnForm(),
            TextField::new('firstname'),
            TextField::new('lastname'),
            EmailField::new('email'),
            TextField::new( 'password'),
            ChoiceField::new('roles')->setChoices(User::ROLES)->allowMultipleChoices(),
        ];
    }

}
